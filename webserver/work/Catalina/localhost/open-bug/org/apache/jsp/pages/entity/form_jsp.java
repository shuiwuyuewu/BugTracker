/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.29
 * Generated at: 2014-08-30 15:32:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages.entity;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class form_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("<head></head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"wrapper\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<form action=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" onsubmit=\"return initForm();\" method=\"post\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div id=\"btnDiv\">\r\n");
      out.write("\t\t\t<input type=\"submit\" class=\"button button-rounded button-flat-primary\" value=\"保存\" />\r\n");
      out.write("\t\t\t<a href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\" class=\"button button-rounded button-flat-primary\">返回</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<table class=\"edit-table\"></table>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<input id=\"_entityId\" type=\"hidden\" name=\"id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.entityId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\" />\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"relateModal\" class=\"hide\"><p style=\"padding: 5px;\">\r\n");
      out.write("\t\t<table id=\"relateTab\" class=\"list-table full-table\"></table>\r\n");
      out.write("\t</p></div>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tvar pageInfo = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageInfo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(", $relate;\r\n");
      out.write("\t\tinitPage();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tppmDialog(\"#relateModal\", \"\", {\r\n");
      out.write("\t        \"确认\": function() { selectRelate(); },\r\n");
      out.write("\t        \"清空\": function() { selectRelate(true); },\r\n");
      out.write("\t        \"取消\": function() { $(this).dialog(\"close\"); }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction initPage() {\r\n");
      out.write("\t\t\tvar html = \"\", f;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var i in pageInfo.fields) {\r\n");
      out.write("\t\t\t\tf = pageInfo.fields[i];\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\thtml += \"<tr>\";\r\n");
      out.write("\t\t\t\thtml += \"<td class='left-td' width='80px'>\" + f.label + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\" + combineEditInput(f) + \"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"</tr>\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"table.edit-table\").append(html);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// init select box\r\n");
      out.write("\t\t\t$(\"input:checkbox\").iCheck({checkboxClass: \"icheckbox_square-blue\"});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction combineEditInput(field) {\r\n");
      out.write("\t\t\tvar html = \"\";\r\n");
      out.write("\r\n");
      out.write("\t\t\tif(field.htmlType == \"TEXT\") {\r\n");
      out.write("\t\t\t\thtml = \"<input name='\" + field.name + \"' value='\" + (field.value ? field.value : \"\") + \"' type='text' class='input-text\" + (field.isRequire == \"Y\" ? \" input-require\" : \"\") + (field.validate_no_repeat == \"Y\" ? \" input-norepeat\" : \"\") + (field.validate_max_length ? (\" \" + field.validate_max_length) : \"\") + \"' />\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse if(field.htmlType == \"PASSWORD\") {\r\n");
      out.write("\t\t\t\thtml = \"<input name='\" + field.name + \"' value='\" + (field.value ? field.value : \"\") + \"' type='password' class='input-text\" + (field.isRequire == \"Y\" ? \" input-require\" : \"\") + \"' />\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse if(field.htmlType == \"TEXTAREA\") {\r\n");
      out.write("\t\t\t\thtml = \"<textarea name='\" + field.name + \"' class='input-textarea\" + (field.validate_max_length ? (\" \" + field.validate_max_length) : \"\") + \"'>\" + (field.value ? field.value : \"\") + \"</textarea>\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse if(field.htmlType == \"CHECKBOX\") {\r\n");
      out.write("\t\t\t\t_remoteCall(\"entity/synDispatch.do\", {operate: \"list\", model: field.relateModel}, function(data) {\r\n");
      out.write("\t\t\t\t\thtml += \"<div id='\" + field.name + \"' field='checkbox' class='chx-container'>\";\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tfor(var i in data.datas) {\r\n");
      out.write("\t\t\t\t\t\tvar d = data.datas[i];\r\n");
      out.write("\t\t\t\t\t\thtml += \"<span class='chx-item'><input id='\" + d[0] + \"' type='checkbox'\";\r\n");
      out.write("\t\t\t\t\t\tif(field.value && field.value.indexOf(d[0]) >= 0)  html += \" checked='checked'\";\r\n");
      out.write("\t\t\t\t\t\thtml += \" />\" + d[1] + \"</span>\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\thtml += \"<input id='_\" + field.name + \"' type='hidden' name='\" + field.name + \"' />\";\r\n");
      out.write("\t\t\t\t\thtml += \"</div>\";\r\n");
      out.write("\t\t\t\t}, true, true);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse if(!field.htmlType && field.relateModel) {\r\n");
      out.write("\t\t\t\thtml = \"<input id='\" + field.name + \"' field='relate' type='text' class='input-text\" + (field.isRequire == \"Y\" ? \" input-require\" : \"\") + \"' ondblclick='showRelate($(this), \\\"\" + field.label + \"\\\", \\\"\" + field.relateModel + \"\\\", \\\"\" + field.relateMulti + \"\\\");' onkeydown='return false;' val='\" + (field.value ? field.value : \"\") + \"' value='\" + (field.relateValue ? field.relateValue : \"\") + \"' /><i onclick='$(this).prev().dblclick();' class='icon-search input-icon'></i>\";\r\n");
      out.write("\t\t\t\thtml += \"<input id='_\" + field.name + \"' type='hidden' name='\" + field.name + \"' />\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\treturn html;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction showRelate($inp, label, relateModel, relateMulti) {\r\n");
      out.write("\t\t\t$relate = $inp;\r\n");
      out.write("\t\t\tvar id = $inp.attr(\"val\"), id = id ? id : \"\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t_remoteCall(\"entity/synDispatch.do\", {operate: \"list\", model: relateModel}, function(data) {\r\n");
      out.write("\t\t\t\tvar html = \"\", fields = data.fields, datas = data.datas;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// init table head html\r\n");
      out.write("\t\t\t\thtml += \"<tr>\";\r\n");
      out.write("\t\t\t\thtml += \"<th width='60px'></th>\";\r\n");
      out.write("\t\t\t\tfor(var i in fields) {\r\n");
      out.write("\t\t\t\t\thtml += \"<th width='\" + fields[i].width + \"px'>\" + fields[i].label + \"</th>\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\thtml += \"</tr>\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// init table body html\r\n");
      out.write("\t\t\t\tfor(var i in datas) {\r\n");
      out.write("\t\t\t\t\thtml += \"<tr id='\" + datas[i][0] + \"' onclick='clickRelate($(this));' \" + (relateMulti != \"Y\" ? \"ondblclick='selectRelate();'\" : \"\") + \">\";\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\thtml += \"<td class='sn'>\";\r\n");
      out.write("\t\t\t\t\thtml += \"<input name='_relate' type='\" + (relateMulti != \"Y\" ? \"radio\" : \"checkbox\") + \"' \" + (id.indexOf(datas[i][0]) >= 0 ? \"checked\" : \"\") + \" />\";\r\n");
      out.write("\t\t\t\t\thtml += \"</td>\";\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tfor(var j in fields) {\r\n");
      out.write("\t\t\t\t\t\thtml += \"<td><div>\" + datas[i][parseInt(j) + 1] + \"</div></td>\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\thtml += \"</tr>\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#relateTab\").html(html);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// init select box\r\n");
      out.write("\t\t\t\t$(\"#relateTab input\").iCheck({radioClass: \"iradio_square-blue\"});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#relateModal\").attr(\"title\", \"选择\" + label);\r\n");
      out.write("\t\t\t\t$(\"#relateModal\").dialog(\"open\");\t\t\t\t\r\n");
      out.write("\t\t\t}, true);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction clickRelate($tr) {\r\n");
      out.write("\t\t\t$(\"input\", $tr).iCheck(\"check\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction selectRelate(isClear) {\r\n");
      out.write("\t\t\tif(isClear) {\r\n");
      out.write("\t\t\t\t$relate.attr(\"val\", \"\").val(\"\");\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tvar $sel = $(\"#relateModal input:radio:checked\").closest(\"tr\");\r\n");
      out.write("\t\t\t\t$relate.attr(\"val\", $sel.attr(\"id\")).val($(\"td:eq(1)\", $sel).text());\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#relateModal\").dialog(\"close\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction initForm() {\r\n");
      out.write("\t\t\t$(\"input[field='relate']\").each(function() {\r\n");
      out.write("\t\t\t\tvar val = $(this).attr(\"val\");\r\n");
      out.write("\t\t\t\t$(\"#_\" + $(this).attr(\"id\")).val(val ? val : \"\");\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"div.select-div\").each(function() {\r\n");
      out.write("\t\t\t\t$(\"#_\" + $(this).attr(\"id\")).val($(this).selectVal());\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"div[field='checkbox']\").each(function() {\r\n");
      out.write("\t\t\t\tvar ids = [];\r\n");
      out.write("\t\t\t\t$(\"input:checkbox:checked\").each(function() {\r\n");
      out.write("\t\t\t\t\tids.push($(this).attr(\"id\"));\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#_\" + $(this).attr(\"id\")).val(ids.join(\",\"));\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\treturn checkForm();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// specially deal with user edit\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\tif(pageInfo.model == \"com.cloud.security.model.User\" && pageInfo.operate == \"edit\") {\r\n");
      out.write("\t\t\t\t$(\"input[name='password']\").removeClass(\"input-require\").val(\"\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f0.setParent(null);
    // /pages/entity/form.jsp(13,16) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("/entity/dispatch.do?operate=save&model=${param.model}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
    if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f1.setParent(null);
    // /pages/entity/form.jsp(17,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f1.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("/entity/dispatch.do?operate=list&model=${param.model}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
    if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
    return false;
  }
}
